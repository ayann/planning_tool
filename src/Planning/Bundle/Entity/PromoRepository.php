<?php

namespace Planning\Bundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr;

/**
 * PromoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PromoRepository extends EntityRepository
{
   /**
    * @param array $get
    * @param bool $flag
    * @return array|\Doctrine\ORM\Query
    */
    public function ajaxTable(array $get, $flag = false)
    {
       /**
        * Set to default
        */
        if(!isset($get['columns']) || empty($get['columns']))
            $get['columns'] = array('id');

        $cb = $this->createQueryBuilder('Entity')
            ->where('Entity.isValid = 1');
        
       /*
        * Ordering
        */
        if ( isset( $get['order'] ) )
        {
            foreach ( $get['order'] as $value )
            {
                if ( $get['columns'][$value['column']]['orderable'] == "true" )
                {
                    $cb->orderBy( "Entity.".$get['columns'][$value['column']]['name'], $value['dir'] );
                }
            }
        }
        
        /*
        * Filtering
        * NOTE this does not match the built-in DataTables filtering which does it
        * word by word on any field. It's possible to do here, but concerned about efficiency
        * on very large tables, and MySQL's regex functionality is very limited
        */
        $aLike = array();
        
        if ( isset($get['search']['value']) && $get['search']['value'] != '' )
        {
            foreach( $get['columns'] as $value )
            {
                if ( isset($value['searchable']) && $value['searchable'] == "true" && $value['name'] != "" )
                {
                    $aLike[] = $cb->expr()->like( "Entity.".$value['name'], '\'%'. $get['search']['value'] .'%\'');
                }
            }
        }

        if(count($aLike) > 0) 
            $cb->andWhere(new Expr\Orx($aLike));
        else unset($aLike);

        
       /*
        * SQL queries
        * Get data to display
        */
        $query = $cb->getQuery();
                
        if($flag)
        return $query;
        else
        return $query->getArrayResult();
    }
}
